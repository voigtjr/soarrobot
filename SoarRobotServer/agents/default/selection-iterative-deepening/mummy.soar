
############ Mummies

sp {mummy*elaborate*state*minimum-depth
   (state <s> ^gs.location <l1> <l2>
              ^elaborations <e>)
   (<l1> ^p1 explorer ^p2 <x1> ^p3 <y1>)
   (<l2> ^p1 exit ^p2 <x2> ^p3 <y2>)
-->
   (<e> ^minimum-explorer-exit-distance (+ (abs (- <x1> <x2>)) (abs (- <y1> <y2>))))
}

##set warnings off
#warnings --off
#sp {mummy*evaluate*state*failure*duplicate
#
#   (state <s2> ^tried-tied-operator
#                      ^gs <gs2> ^superstate.superstate <s1>)
#   (<gs2> ^location { <> <l1> <l12> } { <> <l2> <l22> })
#   (<l12> ^p1 explorer ^p2 <x1> ^p3 <y1>)
#   (<l22> ^p1 mummy ^p2 <x2> ^p3 <y2>)
#   (state <s1> ^desired <d>
#               ^gs <gs>)
#   (<gs> ^location <l1> <l2>)
#   (<l1> ^p1 explorer ^p2 <x1> ^p3 <y1>)
#   (<l2> ^p1 mummy ^p2 <x2> ^p3 <y2>)
#-->
#   (write (crlf) |Duplicate State Detected - 1.|)
#   (<s2> ^failure <d>)}
#
#sp {mummy*evaluate*state*failure*duplicate2
#
#   (state <s2> ^tried-tied-operator
#               ^gs <gs2> ^superstate.superstate.superstate.superstate <s1>)
#   (<gs2> ^location { <> <l1> <l12> } { <> <l2> <l22> })
#   (<l12> ^p1 explorer ^p2 <x1> ^p3 <y1>)
#   (<l22> ^p1 mummy ^p2 <x2> ^p3 <y2>)
#   (state <s1> ^desired <d>
#               ^gs <gs>)
#   (<gs> ^location <l1> <l2>)
#   (<l1> ^p1 explorer ^p2 <x1> ^p3 <y1>)
#   (<l2> ^p1 mummy ^p2 <x2> ^p3 <y2>)
#-->
#   (write (crlf) |Duplicate State Detected - 2.|)
#   (<s2> ^failure <d>)}
##set warnings on
#warnings --on
##
