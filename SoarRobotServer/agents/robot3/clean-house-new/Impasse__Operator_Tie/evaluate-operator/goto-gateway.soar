### 

sp {apply*go-to-next-area*internal
   (state <s> ^name evaluate-operator
              ^operator <op>
              ^top-state <ts>)
   (<ts> ^current-location <c-wp>)
   (<op> ^name go-to-next-area
         ^next-waypoint <next-wp>)
-->
   #(dont-learn <s>)
###(write (crlf) |Try area: | <next-wp>)
   (<ts> ^current-location <c-wp> -
                           <next-wp>)
}

#sp {apply*go-to-next-area*internal*monitor
#   (state <s> ^name evaluate-operator
#              ^operator <op>
#              ^top-state <ts>)
#   (<ts> ^current-location <c-wp>)
#   (<op> ^name go-to-next-area
#         ^next-waypoint <next-wp>)
#   (<next-wp> ^id <id>)
#-->
####(write (crlf) |Move to room: | <id> )
#}

#sp {apply*go-to-next-area*internalX
#   :interrupt
#   (state <s> ^name evaluate-operator
#              ^operator <op>
#              ^top-state <ts>)
#   (<ts> ^current-location <cloc>)
#   (<op> ^name go-to-next-area
#         ^next-waypoint <nloc>)
#   -{ (<cloc> ^id <cid> ^x <cx> ^y <cy>)
#      (<nloc> ^id <nid> ^x <nx> ^y <ny>)}
#-->
#   #(dont-learn <s>)
#   (write (crlf) |Move from area: | <cloc> | to | <nloc> | missing x y.|)
#   (<ts> ^current-location <c-wp> -
#                           <next-wp>)
#}




