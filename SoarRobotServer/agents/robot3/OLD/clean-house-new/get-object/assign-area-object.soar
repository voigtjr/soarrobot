sp {get-object*propose*assign-area-object
  # :interrupt
   (state <s> ^name get-object
              ^top-state.parameters.objects-held-in epmem
              ^object <block>)
  -(<block> ^area)
-->
   (<s> ^operator <op> + =, >)
   (<op> ^name assign-area-object)
}

sp {apply*assign-area-object
   (state <s> ^operator.name assign-area-object
              ^top-state.areas.area <area>
              ^object <block>)
   (<area> ^id <area-id>)
   (<block> ^area-id <area-id>)
-->
   (<block> ^area <area>)}

sp {apply*assign-area-object*smem
  # :interrupt
   (state <s> ^operator.name assign-area-object
              ^top-state.parameters.areas-held-in smem
              ^smem.command <cmd>
              ^object <object>)
   (<object> ^area-id <id>
            -^area <area>)
-->
   (<cmd> ^query <q>)
   (<q> ^id <id>)}
#        ^type room)}  JEL - sometimes it gets the door instead of room for an object

sp {apply*assign-area-object*smem*retrieved
   (state <s> ^operator.name assign-area-object
              ^top-state.parameters.areas-held-in smem
              ^smem <smem>
              ^object <object>)
   (<smem> ^command <cmd>
           ^result <res>)
   (<cmd> ^query <q>)
   (<res> ^retrieved <cp>
          ^success <q>)
   (<cp> ^id <id>
         ^type << door room >>)
   (<object> ^area-id <id>
            -^area <area>)
-->
   (<object> ^area <cp>)}