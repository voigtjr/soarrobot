#### Clean up nearby areas that are not useful.
# No storage or destination area to plan to
#sp {clean-house-new*propose*remove-distant-areas-smem*no-destination
#   (state <s> ^superstate nil
#             -^operator.name get-object
#              ^parameters.areas-held-in smem
#              ^current-location <ca>
#             -^destination-area)
#   (<ca> ^next <next>
#        -^storage-area yes)
#   (<next> ^next { <next2> <> <ca> })
#   (<next2> ^id)
#-->
#   (<s> ^operator <o> + =, >)
#   (<o> ^name remove-distant-areas-smem
#        ^area <next2>)
#}
#
#sp {clean-house-new*propose*remove-distant-areas-smem*remove-next-next*destination
#   #:o-support
#   (state <s> ^superstate nil
#              ^parameters.areas-held-in smem
#              ^current-location <ca>
#              ^destination-area <ca>)
#   (<ca> ^next <next>)
#   (<next> ^next { <next2> <> <ca> })
#   (<next2> ^id)
#-->
#   (<s> ^operator <o> + =, >)
#   (<o> ^name remove-distant-areas-smem
#        ^area <next2>)
#}
#
#sp {clean-house-new*propose*remove-distant-areas-smem*remove-next-next*storage
#  # :o-support
#   (state <s> ^superstate nil
#             -^operator.name get-object
#              ^parameters.areas-held-in smem
#              ^current-location <ca>
#             -^destination-area)
#   (<ca> ^next <next>
#         ^storage-area yes)
#   (<next> ^next { <next2> <> <ca> })
#   (<next2> ^id)
#-->
#   (<s> ^operator <o> + =, >)
#   (<o> ^name remove-distant-areas-smem
#        ^area <next2>)
#}
#
#sp {clean-house-new*propose*remove-distant-areas-smem*remove-next-next*storage2
#  # :o-support
#   (state <s> ^superstate nil
#             -^operator.name get-object
#              ^parameters.areas-held-in smem
#              ^current-location <ca>
#              ^destination-area.id <id>)
#   (<ca> ^next <next>
#         ^id <id>
#         ^storage-area yes)
#   (<next> ^next { <next2> <> <ca> })
#   (<next2> ^id)
#-->
#   (<s> ^operator <o> + =, >)
#   (<o> ^name remove-distant-areas-smem
#        ^area <next2>)
#}
#
#sp {clean-house-new*propose*remove-distant-areas-smem*remove-next-next*storage*no-planning
#  # :o-support
#   (state <s> ^superstate nil
#              ^parameters.areas-held-in smem
#              ^parameters.look-ahead-planning no
#              ^current-location <ca>)
#   (<ca> ^next <next>
#         ^storage-area yes)
#   (<next> ^next { <next2> <> <ca> })
#   (<next2> ^id)
#-->
#   (<s> ^operator <o> + =, >)
#   (<o> ^name remove-distant-areas-smem
#        ^area <next2>)
#}
#
#sp {apply*remove-distant-areas-smem
#   (state <s> ^operator <op>)
#   (<op> ^name remove-distant-areas-smem
#         ^area <area>)
#   (<area> ^<att> <value>)
#-->
####(write (crlf) | Remove distance object: | <next2> | ^| <att> | | <value>)
#   (<area> ^<att> <value> -)
#}
#
##
#sp {clean-house-new*remove-distant-areas-smem*remove-destination-area
#   (state <s> ^superstate nil  # Only top-state
#              ^operator.name remove-distant-areas-smem
#              ^parameters.areas-held-in smem
#              ^current-location.id <id>
#              ^destination-area <da>)
#   (<da> ^id <id>)
#-->
####(write (crlf) | Remove destination area | <da>)
#   (<s> ^destination-area <da> -)
#}
#
