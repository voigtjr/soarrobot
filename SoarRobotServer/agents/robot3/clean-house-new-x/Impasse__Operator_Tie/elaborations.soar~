sp {Impasse__Operator_Tie*elaborate*state*stop
   (state <s> ^impasse tie
             -^top-state.io.input-link.self.stopped yes
              ^top-state.io.output-link <out>)
-->
   (<out> ^stop <x>)
}

#sp {stop-all
#   :o-support
#   (state <s> ^top-state.io.output-link <out>)
#   (<out> ^stop
#          ^set-velocity <sv>)
#-->
#   (<out> ^set-velocity <sv> -)}

sp {Impasse__Operator_Tie*elaborate*learn*on
#:interrupt
   (state <s> ^impasse tie)
-->
   (force-learn <s>)
}

### Need to modify so doesn't apply when gateways are available ????
sp {selection*elaborate*evaluation*total-estimated-cost
   :default
   (state <s> ^name selection
              ^evaluation <e>)
  -(<s> ^superstate.desired.location.gateway-x)  ##JEL 2/11
   (<e> ^estimated-cost <ec>
        #^path-cost { <> 0 <pc> }) ###JEL 2/11 - why test <> 0?
        ^path-cost <pc>)
-->
###(write (crlf) |~~~~~~~~~~~~~~~~~~~~~~~|)
#(write (crlf) |Total Estmated Cost: | (+  <ec> <pc>) | : | <e> | path: | <pc> | Estimated Cost: | <ec> )
   (<e> ^total-estimated-cost (+  <ec> <pc>))
}

## Special for rooms without gateways
sp {selection*elaborate*evaluation*total-estimated-cost*no-gateways
   :default
   (state <s> ^name selection
              ^evaluation <e>
             -^top-state.current-location <cloc>
              ^superstate.desired.location <dloc>)
   (<e> ^current-location <cloc>
       -^updated-estimate true)  ## JEL 2/11/
   (<cloc> ^x <cx> ^y <cy> ^id <cid>)
   (<dloc> ^temp-x <dx> ^temp-y <dy> ^id <did>
                                 -^x)
-->
###(write (crlf) |!!!!!!!!!!!!!!!!!!!!!!!!!!!|)
###(write (crlf) |current x | <cx> | y | <cy>)
###(write (crlf) |desired x | <dx> | y | <dy>)
###(write (crlf) |range:    | (compute-range <cx> <cy> <dx> <dy>))
#  (write (crlf) |Estimated Cost No Gateways: | (compute-range <cx> <cy> <dx> <dy>) )
   (<e> ^estimated-cost (compute-range <cx> <cy> <dx> <dy>)  )
}

#sp {selection*elaborate*evaluation*total-estimated-cost*gateways
#   :default
#   (state <s> ^name selection
#              ^evaluation <e>
#              ^superstate.desired.location <dloc>)
#   (<e> ^current-location <cloc>
#        ^path-cost <pc>) # JEL 2/11
#     #  -^updated-estimate true) ## JEL 2/11/
#   (<cloc> ^x <cx> ^y <cy> ^id <cid>)
#  -(<cloc> ^gateway.to <did>)
#  -(<dloc> ^x <xdx> ^y <xdy>)
#   (<dloc> ^gateway-x <dx> ^gateway-y <dy> ^id <did>)
#-->
####(write (crlf) |!!-----------------!!!!|)
####(write (crlf) |current x | <cx> | y | <cy>)
####(write (crlf) |desired x | <dx> | y | <dy>)
####(write (crlf) |range:    | (compute-range <cx> <cy> <dx> <dy>))
#   #(write (crlf) |Total Estimated Cost: | (+  (compute-range <cx> <cy> <dx> <dy>) <pc>))
#   (<e> ^total-estimated-cost (+  (compute-range <cx> <cy> <dx> <dy>) <pc>)  # JEL 2/11
#        ^estimated-cost (compute-range <cx> <cy> <dx> <dy>)  )
#}

sp {selection*elaborate*evaluation*total-estimated-cost*gateways
#   :interrupt
   :default
   (state <s> ^name selection
              ^evaluation <e>
              ^superstate.desired.location <dloc>)
   (<e> ^current-location <cloc>
       # ^path-cost <pc> # JEL 2/11
       -^updated-estimate true) ## JEL 2/11/
   (<cloc> ^x <cx> ^y <cy> ^id <cid>)
  -(<cloc> ^gateway.to <did>)
  -(<dloc> ^x <xdx> ^y <xdy>)
   (<dloc> ^gateway-x <dx> ^gateway-y <dy> ^id <did>)
-->
###(write (crlf) |!!-----------------!!!!|)
###(write (crlf) |current x | <cx> | y | <cy>)
###(write (crlf) |desired x | <dx> | y | <dy>)
###(write (crlf) |range:    | (compute-range <cx> <cy> <dx> <dy>))
 #  (write (crlf) |e | <e>)
  # (write (crlf) |Estimated Cost Gateways: |(compute-range <cx> <cy> <dx> <dy>))
   (<e> #^total-estimated-cost (+  (compute-range <cx> <cy> <dx> <dy>) <pc>)  # JEL 2/11
           ^estimated-cost (compute-range <cx> <cy> <dx> <dy>)  )
}

sp {selection*elaborate*evaluation*total-estimated-costX
   :default
   (state <s> ^name selection
              ^evaluation <e>)
   (<s> ^superstate.desired.location.gateway-x)  ##JEL 2/11
   (<e> ^estimated-cost <ec>
     #   ^path-cost { <> 0 <pc> }) ###JEL 2/11 - why test <> 0?
        ^path-cost <pc>)
-->
###(write (crlf) |~~~~~~~~~~~~~~~~~~~~~~~|)
 #  (write (crlf) |Total Estmated Cost: | <e> | | (+  <ec> <pc>) | : | <e> | path: | <pc> | Estimated Cost: | <ec> )
   (<e> ^total-estimated-cost (+  <ec> <pc>))
}

sp {selection*elaborate*evaluation*total-estimated-cost*gateways*achieved
 #  :interrupt
   :default
   (state <s> ^name selection
              ^evaluation <e>
              ^superstate.desired.location <dloc>)
   (<e> ^current-location.gateway.to <did>
        ^path-cost <pc>)
  -(<dloc> ^x <dx> ^y <dy>)
   (<dloc> ^id <did>
           ^gateway-x)
-->
 #  (write (crlf) |Achieved desired location. | <dloc> | id | <did> )
 #  (write (crlf) |!!!!!!!!!!!!XXXXXXXXXX|)
  # (write (crlf) |Total Cost: | <e> |: | <pc>)
   (<e> #^total-estimated-cost <pc>  #JEL 2-28 no need for total as it will be computed by other rules
        ^estimated-cost 0 )
}
############ Mods to selection-astar because use robot position not current location
sp {selection*elaborate*evaluation*estimated-cost
   :default
   (state <s> ^name selection
              ^evaluation <e>
             -^top-state.robot-position
              ^superstate.desired.location <dloc>)
   (<e> ^robot-position <rp>
       -^updated-estimate true)
   (<rp> ^x <cx> ^y <cy>)
   (<dloc> ^x <dx> ^y <dy>)
-->
 ##(write (crlf) |current x | <cx> | y | <cy>)
 ##(write (crlf) |desired x | <dx> | y | <dy>)
 ##(write (crlf) |range:    | (compute-range <cx> <cy> <dx> <dy>))
#(write (crlf) |Estimated Cost: | (compute-range <cx> <cy> <dx> <dy>) | : | <e>)
   (<e> ^estimated-cost (compute-range <cx> <cy> <dx> <dy>)  )
}